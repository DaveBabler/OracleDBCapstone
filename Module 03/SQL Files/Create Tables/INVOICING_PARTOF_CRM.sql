CREATE TABLE ESTIMATE(
LineID int GENERATED ALWAYS AS IDENTITY, 
EstimateID int, 
PetID int, 
VetID int, 
Date_Estimate_Creation date, 
DrugID int, 
Drug_Cost_Per_Unit number(7,2), 
Drug_Units_Prescribed int, 
Rx_Cost number(7,2), 
LabID int, 
Lab_Cost number(7,2), 
Specialty_Add_On_Cost number(7,2), 
SpecialtyID int, 
Vet_ProcedureID int, 
OR_Fee number (5,2),
Procedure_Cost number(7,2), 
Add_Ons_Description varchar2(2000), 
Invididual_Add_On_Cost number(7,2), 
Total_Add_On_Costs number(7,2), 
Total_Estimate_Cost number(9,2), 
Late_Fee number(7,2),
CONSTRAINT fk_petid_esto FOREIGN KEY (PETID)
		REFERENCES ANIMAL_FACTS(PETID), 
CONSTRAINT fk_drugid_esto FOREIGN KEY (DRUGID)
		REFERENCES PHARMACOLOGY_STOCK(DRUGID), 
CONSTRAINT fk_labid_esto FOREIGN KEY (LABID)
		REFERENCES PATHOLOGY_LAB_TESTS(LABID), 	
CONSTRAINT fk_specialtyid_esto FOREIGN KEY (SPECIALTYID)
		REFERENCES SPECIALTIES(SPECIALTYID), 
CONSTRAINT fk_vetprocedureid_esto FOREIGN KEY (VET_PROCEDUREID)
		REFERENCES VET_PROCEDURE(VET_PROCEDUREID)
CONSTRAINT ck_oneline_esto CHECK 
		((DRUGID IS NOT NULL AND (VET_PROCEDUREID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL))
			OR 
			(LABID IS NOT NULL AND (DRUGID IS NULL AND VET_PROCEDUREID IS NULL AND Add_Ons_Description IS NULL))
			OR
			(VET_PROCEDUREID IS NOT NULL AND (DRUGID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL))
			OR
			(Add_Ons_Description IS NOT NULL AND (DRUGID IS NULL AND LABID IS NULL AND VET_PROCEDUREID IS NULL))
			OR DRUGID IS NULL AND VET_PROCEDUREID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL)
)
TABLESPACE CRM;
COMMENT ON COLUMN ESTIMATE.EstimateID IS 'Generated by estimate_seq, through a procedure, is how grouping will work for reports';

()



CREATE TABLE INVOICE_OPEN(
LineID int GENERATED AS IDENTITY PRIMARY KEY NOT NULL, 
InvoiceID int, 
PetID int, 
VetID int, 
Date_Invoice_Creation date, 
RXID int, 
DrugID int, 
Drug_Cost_Per_Unit number(7,2), 
Drug_Units_Prescribed int, 
Rx_Cost number(7,2), 
LabID int, 
Lab_Cost number(7,2), 
Specialty_Add_On_Cost number(7,2), 
SpecialtyID int, 
Vet_ProcedureID int, 
OR_Fee number (5,2), 
Procedure_Cost number(7,2), 
Add_Ons_Description varchar2(2000), 
Invididual_Add_On_Cost number(7,2), 
LINE_SUBTOTAL number(9,2),
GRAND_TOTAL number(9,2),  
CONSTRAINT fk_rxid_inv_o FOREIGN KEY (RXID)
        REFERENCES RX_HISTORY(RXID), 
CONSTRAINT fk_petid_inv_o FOREIGN KEY (PETID)
		REFERENCES ANIMAL_FACTS(PETID), 
CONSTRAINT fk_drugid_inv_o FOREIGN KEY (DRUGID)
		REFERENCES PHARMACOLOGY_STOCK(DRUGID), 
CONSTRAINT fk_labid_inv_o FOREIGN KEY (LABID)
		REFERENCES PATHOLOGY_LAB_TESTS(LABID), 
CONSTRAINT fk_specialtyid_inv_o FOREIGN KEY (SPECIALTYID)
		REFERENCES SPECIALTIES(SPECIALTYID), 
CONSTRAINT fk_vetprocedureid_inv_o FOREIGN KEY (VET_PROCEDUREID)
		REFERENCES VET_PROCEDURE(VET_PROCEDUREID), 
CONSTRAINT ck_ispaid CHECK (Paid_In_Full IN  ('Y', 'y', 'T', 't', 'F', 'f', 'N', 'n', '0', '1')), 
CONSTRAINT ck_oneline_inv_o CHECK 
			((DRUGID IS NOT NULL AND (VET_PROCEDUREID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL))
			OR 
			(LABID IS NOT NULL AND (DRUGID IS NULL AND VET_PROCEDUREID IS NULL AND Add_Ons_Description IS NULL))
			OR
			(VET_PROCEDUREID IS NOT NULL AND (DRUGID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL))
			OR
			(Add_Ons_Description IS NOT NULL AND (DRUGID IS NULL AND LABID IS NULL AND VET_PROCEDUREID IS NULL))
			OR DRUGID IS NULL AND VET_PROCEDUREID IS NULL AND LABID IS NULL AND Add_Ons_Description IS NULL)
)
)
TABLESPACE CRM;

COMMENT ON COLUMN INVOICE_OPEN.InvoiceID IS 'Generated by invoice_seq, through a procedure, is how grouping will work for reports';

CREATE TABLE PAYMENT_TYPE(
Payment_TypeID int GENERATED AS IDENTITY PRIMARY KEY NOT NULL, 
Payment_Type_Name varchar2(64)
	)
TABLESPACE CRM;

CREATE TABLE PAYMENT_VERIFICATION(
PaymentID int GENERATED AS IDENTITY PRIMARY KEY NOT NULL, 
InvoiceID int, 
Payment_TypeID int, 
Amount_Paid number(9,2), 
Check_Number int, 
CC_Encrypted12 RAW(240),
CC_Last4 varchar2(4),
DATE_PAID date DEFAULT SYSDATE,

/*CONSTRAINT fk_payver_invid FOREIGN KEY (InvoiceID)
		REFERENCES INVOICE_OPEN(InvoiceID),  not actually a PK, may 
		ultimately set up a connection table but for now PLSQL will suffice */
CONSTRAINT fk_paymenttypeid FOREIGN KEY (Payment_TypeID)
		REFERENCES PAYMENT_TYPE(Payment_TypeID)
	)
TABLESPACE CRM;
COMMENT ON COLUMN PAYMENT_VERIFICATION.CC_Encrypted12  IS 'This holds the raw encrypted part of the credit card';



CREATE TABLE INVOICE_CLOSED(
LineID int,
InvoiceID int, 
PetID int, 
VetID int, 
Date_Invoice_Creation date, 
RXID int, 
DrugID int, 
Drug_Cost_Per_Unit number(7,2), 
Drug_Units_Prescribed int, 
Rx_Cost number(7,2), 
LabID int, 
Lab_Cost number(7,2), 
Specialty_Add_On_Cost number(7,2), 
SpecialtyID int, 
Vet_ProcedureID int, 
OR_Fee number (5,2), 
Procedure_Cost number(7,2), 
Add_Ons_Description varchar2(2000), 
Invididual_Add_On_Cost number(7,2), 
LINE_SUBTOTAL number(9,2),
Late_Fee number(9,2), 
GRAND_TOTAL number(9,2), 

 
CONSTRAINT fk_rxid_inv_c FOREIGN KEY (RXID)
        REFERENCES RX_HISTORY(RXID), 
CONSTRAINT fk_petid_inv_c FOREIGN KEY (PETID)
		REFERENCES ANIMAL_FACTS(PETID), 
CONSTRAINT fk_drugid_inv_c FOREIGN KEY (DRUGID)
		REFERENCES PHARMACOLOGY_STOCK(DRUGID), 
CONSTRAINT fk_labid_inv_c FOREIGN KEY (LABID)
		REFERENCES PATHOLOGY_LAB_TESTS(LABID), 
CONSTRAINT fk_specialtyid_inv_c FOREIGN KEY (SPECIALTYID)
		REFERENCES SPECIALTIES(SPECIALTYID))
TABLESPACE CRM;

COMMENT ON COLUMN INVOICE_CLOSED.LineID IS 'This data was generated as a PRIMARY KEY by INVOICE OPEN, and is superflous but kept for now';